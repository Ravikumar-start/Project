Strings:
===========

Strings are collection of words.

String is represented in double quaotes

String is combination of words, numbers, special characters.


String is a class aswell as a datatype.

String is also called as "immutable"

once you set the data then data can not be changed ideally.

there are multiple ways to declare a string:


1. String s="india";

2.String str=new String("inida")

3.StringBuffer bfr=new StringBuffer("india");
4.StringBuilder blder=new StringBuilder("india");

When we speak about string we must need to rememeber how the memeory management is happening on a string

on strings it is a very special case available in java

there are two kinds og memeory holders available called as Heap memory and Pool memory

this pool memeory is also called as "String constant pool" memory.



To manipulate the data of a string there are few methods associated withit

1.length:
this method is used to get the length of a given string.

input:string
return:int
synatx:string or string variable .length()


diff b/n length() and length

length()==mapped for string
length==mapped for arrays

2.charAt():
this method is used to get the character from a specifix index given by the user on the source string.


input:string
return:character

syntax:string or string variable .charAt(index)


3.substring():
this method is used to get the sequence of characters from a given source string

this method have 2 parameters 

1st param=== tell about the starting point, its an index value

2nd param=== tell about the length of characters

again length must be calucaled from the starting point of the  string

4.Character.isDigit()

This method is used to verify if the user given character is numeric or not

input:character
return:boolean

syntax:

Character.isDigit("some character")

5.split()
This method is used to break the given string into words by using a delimiter

input:String
return:Array

syntax:string or string variable .split("delimiter")

7.Character.isLetter()

This method is used to verify if the user given character is letter or not

input:character
return:boolean

syntax:

Character.isLetter("some character")


8.Character.isWhitespace()

This method is used to verify if the user given character is space or not

input:character
return:boolean

syntax:

Character.isWhitespace("some character")


9.Character.isUpperCase() 

This method is used to verify if the user given character is Uppercase or not

input:character
return:boolean

syntax:

Character.isUpperCase("some character")



10.Character.isLowerCase() 

This method is used to verify if the user given character is Lower case or not

input:character
return:boolean

syntax:

Character.isLowerCase("some character")


12.indexOf():

This method is used to position of given word on the source string

This method will return the position of the first occurance only

Note that , it will return the position of the first letter in the word


input:String
return:integer

syntax:

String.indexOf("some word");





13.lastIndexOf():

This method is used to last index position of given word on the source string

This method will return the position of the last occurance only

Note that , it will return the position of the first letter in the word


input:String
return:integer

syntax:

String.lastIndexOf("some word");








14.toUpper():

This method is used to convert the given string into upper case string


input:String
return:String

syntax:

String.toUpper("some word");




15.toLower():

This method is used to convert the given string into lowercase string


input:String
return:String

syntax:

String.toLower("some word");



16.trim():

This method is used to remove the space in the starting and ending of the string


input:String
return:String

syntax:

String.trim();



17.equals():

This method is used to compare two string

input:String
return:boolean

syntax:

String1.equals(String2);



18.contentEquals():

This method is also same as to equals only

input:String
return:boolean

syntax:

String1.contentEquals(String2);



19.equalsIgnoreCase():

This method is used to compare two strings by ignoring the case sensitivity


input:String
return:boolean

syntax:

String1.equalsIgnoreCase(String2);

20.startwith()
This method is used to verify if the string is starting with a specific word or not

input:String
return:boolean

syntax:

String1.startwith(String2);



21.endswith()
This method is used to verify if the string is ending with a specific word or not

input:String
return:boolean

syntax:

String1.endswith(String2);



22.replace()
This method is used to identify the match case of the and replace withthe user given value


input:String
return:String

Note:Thermameter is used to measure temparatur, The temparature is very high

Here if i try to search "The" , it will replace every The as a match found


syntax:

String.replace(find,replace);

